project.ext {
  apiVersion = '3.9.6'
  engineVersion = '3.9.11-alpha-1'
  bundledPluginsVersion = '3.9.5-alpha-2'
  cloudPackVersion = '3.9.2'
  licenseDatabaseVersion = '1.0.25'

  apacheDsVersion = '1.5.5'
  jackrabbitVersion = '2.6.5'
  jcloudsVersion = '1.5.5'
  jettyVersion = '6.1.11'
  jythonVersion = '2.5.3'
  httpComponentsVersion = '4.2.3'
  overcastVersion = '1.1.7'
  overthereVersion = '2.3.0'
  resteasyVersion = '2.3.5.Final'
  slf4jVersion = '1.7.2'
  springVersion = '3.2.11.RELEASE'
  springBatchVersion = '2.1.9.RELEASE'
  springSecurityVersion = '3.2.5.RELEASE'
  trueZipVersion = '7.4.3'
}

project.ext.deps = [
  apache_httpclient4: "org.apache.httpcomponents:httpclient:${httpComponentsVersion}",
  apache_httpcore4: "org.apache.httpcomponents:httpcore:${httpComponentsVersion}",
  apache_httpmime4: "org.apache.httpcomponents:httpmime:${httpComponentsVersion}",
  apacheds_client: "org.apache.directory.server:apacheds-core-integ:${apacheDsVersion}",
  apacheds_server: "org.apache.directory.server:apacheds-server-integ:${apacheDsVersion}",
  args4j: "args4j:args4j:2.0.16",
  assumeng: "nl.javadude.assumeng:assumeng:1.2.3",
  bouncycastle: "org.bouncycastle:bcprov-jdk15on:1.49",
  cglib: "cglib:cglib:2.2.2",
  commons_beanutils: "commons-beanutils:commons-beanutils:1.8.3",
  commons_codec: "commons-codec:commons-codec:1.7",
  commons_collections: "commons-collections:commons-collections:3.2.1",
  commons_httpclient: "commons-httpclient:commons-httpclient:3.1",
  commons_io: "commons-io:commons-io:2.4",
  commons_lang: "commons-lang:commons-lang:2.6",
  commons_lang3: "org.apache.commons:commons-lang3:3.1",
  deployit_cloud_plugin: "com.xebialabs.deployit.plugins:cloud-plugin:$cloudPackVersion",
  deployit_trigger_plugin: "com.xebialabs.deployit.plugins:trigger-plugin:$bundledPluginsVersion",
  deployit_command_plugin: "com.xebialabs.deployit.plugins:command-plugin:$bundledPluginsVersion",
  deployit_database_plugin: "com.xebialabs.deployit.plugins:database-plugin:$bundledPluginsVersion",
  deployit_doc_generator: "com.xebialabs.deployit.engine:doc-generator:$engineVersion",
  deployit_engine_api: "com.xebialabs.deployit:engine-api:$apiVersion",
  deployit_engine_spi: "com.xebialabs.deployit:engine-spi:$apiVersion",
  deployit_engine_xml: "com.xebialabs.deployit:engine-xml:$apiVersion",
  deployit_file_plugin: "com.xebialabs.deployit.plugins:file-plugin:$bundledPluginsVersion",
  deployit_generic_plugin: "com.xebialabs.deployit.plugins:generic-plugin:$bundledPluginsVersion",
  deployit_jee_plugin: "com.xebialabs.deployit.plugins:jee-plugin:$bundledPluginsVersion",
  deployit_local_booter: "com.xebialabs.deployit.engine:local-booter:$engineVersion",
  deployit_packager: "com.xebialabs.deployit.engine:packager:$engineVersion",
  deployit_planner: "com.xebialabs.deployit.engine:planner:$engineVersion",
  deployit_python_plugin: "com.xebialabs.deployit.plugins:python-plugin:$bundledPluginsVersion",
  deployit_powershell_plugin: "com.xebialabs.deployit.plugins:powershell-plugin:$bundledPluginsVersion",
  deployit_remote_booter: "com.xebialabs.deployit.engine:remote-booter:$engineVersion",
  deployit_remoting_plugin: "com.xebialabs.deployit.plugins:remoting-plugin:$bundledPluginsVersion",
  deployit_replacer: "com.xebialabs.deployit.engine:replacer:$engineVersion",
  deployit_test_engine: "com.xebialabs.deployit.engine:test-engine:$engineVersion",
  deployit_test_tools: "com.xebialabs.deployit.engine:test-tools:$engineVersion",
  deployit_tasker: "com.xebialabs.deployit.engine:tasker:$engineVersion",
  deployit_udm_plugin_api: "com.xebialabs.deployit:udm-plugin-api:$apiVersion",
  deployit_webserver_plugin: "com.xebialabs.deployit.plugins:webserver-plugin:$bundledPluginsVersion",
  deployit_deployment_checklist_plugin: "com.xebialabs.deployit.plugins:deployment-checklist-plugin:$bundledPluginsVersion",
  deployit_group_orchestrator_plugin: "com.xebialabs.deployit.plugins:group-orchestrator-plugin:$bundledPluginsVersion",
  deployit_engine_xml: "com.xebialabs.deployit.engine:engine-xml:$engineVersion",
  xebialabs_html_writer: "com.xebialabs:html-writer:1.0",
  xebialabs_rest_doclet: "com.xebialabs:rest-doclet:1.5-nojson",
  dom4j: "dom4j:dom4j:1.6.1",
  easymock: "org.easymock:easymock:3.1",
  fest_assert_core: "org.easytesting:fest-assert-core:2.0M10",
  fest_reflect: "org.easytesting:fest-reflect:1.4.1",
  findbugs_annotations: "com.google.code.findbugs:annotations:2.0.1",
  findbugs_jsr305: "com.google.code.findbugs:jsr305:2.0.1",
  freemarker: "org.freemarker:freemarker:2.3.19",
  grizzly_httpserver: "org.glassfish.grizzly:grizzly-http-server:2.2.5",
  guava: "com.google.guava:guava:13.0",
  hamcrest_core: "org.hamcrest:hamcrest-core:1.3",
  hamcrest_lib: "org.hamcrest:hamcrest-library:1.3",
  httpunit: "httpunit:httpunit:1.7",
  icu4j: "com.ibm.icu:icu4j:3.4.4",
  jackrabbit_api: "org.apache.jackrabbit:jackrabbit-api:${jackrabbitVersion}",
  jackrabbit_commons: "org.apache.jackrabbit:jackrabbit-jcr-commons:${jackrabbitVersion}",
  jackrabbit_core: "org.apache.jackrabbit:jackrabbit-core:${jackrabbitVersion}",
  jackrabbit_server: "org.apache.jackrabbit:jackrabbit-jcr-server:${jackrabbitVersion}",
  jackrabbit_spi_commons: "org.apache.jackrabbit:jackrabbit-spi-commons:${jackrabbitVersion}",
  jackrabbit_spi: "org.apache.jackrabbit:jackrabbit-spi:${jackrabbitVersion}",
  jackrabbit_webapp: "org.apache.jackrabbit:jackrabbit-webapp:${jackrabbitVersion}@jar",
  jackrabbit_webdav: "org.apache.jackrabbit:jackrabbit-webdav:${jackrabbitVersion}",
  javassist: "org.javassist:javassist:3.17.1-GA",
  javax_transaction: "javax.transaction:jta:1.1",
  javaxmail: "javax.mail:mail:1.4",
  jaxen: "jaxen:jaxen:1.1.4",
  jaxrs_api: "org.jboss.resteasy:jaxrs-api:${resteasyVersion}",
  jcl_over_slf4j: "org.slf4j:jcl-over-slf4j:${slf4jVersion}",
  jclouds_api_ec2: "org.jclouds.api:ec2:${jcloudsVersion}",
  jclouds_aws_ec2: "org.jclouds.provider:aws-ec2:${jcloudsVersion}",
  jclouds_compute: "org.jclouds:jclouds-compute:${jcloudsVersion}",
  jclouds_core: "org.jclouds:jclouds-core:${jcloudsVersion}",
  jcr: "javax.jcr:jcr:2.0",
  jdom: "org.jdom:jdom:2.0.2",
  jettison: "org.codehaus.jettison:jettison:1.3.1",
  jetty_servlet_api: "org.mortbay.jetty:servlet-api-2.5:${jettyVersion}",
  jetty_util: "org.mortbay.jetty:jetty-util:${jettyVersion}",
  jetty: "org.mortbay.jetty:jetty:${jettyVersion}",
  jline: "jline:jline:2.10",
  jms: "javax.jms:jms:1.1",
  joda_time: "joda-time:joda-time:2.1",
  joda_time_convert: "org.joda:joda-convert:1.3",
  junit: "junit:junit:4.11",
  junit_dep: "junit:junit:4.11",
  junit_params: "pl.pragmatists:JUnitParams:0.9.0",
  jython: "org.python:jython:${jythonVersion}",
  jython_standalone: "org.python:jython-standalone:${jythonVersion}",
  license_database: "com.xebialabs.deployit.gradle:license-data:${licenseDatabaseVersion}",
  log4j_over_slf4j: "org.slf4j:log4j-over-slf4j:${slf4jVersion}",
  logback_classic: "ch.qos.logback:logback-classic:1.0.9",
  mime4j: "org.apache.james:apache-mime4j:0.6",
  mockito: "org.mockito:mockito-all:1.9.5",
  mockito_core: "org.mockito:mockito-core:1.9.5",
  mustache: "com.samskivert:jmustache:1.8",
  overthere: "com.xebialabs.overthere:overthere:${overthereVersion}",
  overcast: "com.xebialabs.cloud:overcast:${overcastVersion}",
  resteasy_jaxbprovider: "org.jboss.resteasy:resteasy-jaxb-provider:${resteasyVersion}",
  resteasy_jaxrs: "org.jboss.resteasy:resteasy-jaxrs:${resteasyVersion}",
  resteasy_multipart_provider: "org.jboss.resteasy:resteasy-multipart-provider:${resteasyVersion}",
  resteasy_spring: "org.jboss.resteasy:resteasy-spring:${resteasyVersion}",
  resteasy: "org.jboss.resteasy:resteasy-spring:${resteasyVersion}",
  scannit: "nl.javadude.scannit:scannit:1.1.0",
  servletapi: "javax.servlet:servlet-api:2.5",
  shrinkwrap_api: "org.jboss.shrinkwrap:shrinkwrap-api:1.0.0-alpha-12",
  shrinkwrap_impl: "org.jboss.shrinkwrap:shrinkwrap-impl-base:1.0.0-alpha-12",
  slf4j_api: "org.slf4j:slf4j-api:${slf4jVersion}",
  spring_batch_core: "org.springframework.batch:spring-batch-core:${springBatchVersion}",
  spring_beans: "org.springframework:spring-beans:${springVersion}",
  spring_context: "org.springframework:spring-context:${springVersion}",
  spring_core: "org.springframework:spring-core:${springVersion}",
  spring_jdbc: "org.springframework:spring-jdbc:${springVersion}",
  spring_security_config: "org.springframework.security:spring-security-config:${springSecurityVersion}",
  spring_security_core: "org.springframework.security:spring-security-core:${springSecurityVersion}",
  spring_security_ldap: "org.springframework.security:spring-security-ldap:${springSecurityVersion}",
  spring_security_web: "org.springframework.security:spring-security-web:${springSecurityVersion}",
  spring_test: "org.springframework:spring-test:${springVersion}",
  spring_web: "org.springframework:spring-web:${springVersion}",
  spring_webmvc: "org.springframework:spring-webmvc:${springVersion}",
  t2_bus: "nl.javadude.t2bus:t2-bus:1.2.1",
  testng: "org.testng:testng:6.8",
  truezip_file: "de.schlichtherle.truezip:truezip-file:${trueZipVersion}",
  truezip_driver_file: "de.schlichtherle.truezip:truezip-driver-file:${trueZipVersion}",
  truezip_driver_zip: "de.schlichtherle.truezip:truezip-driver-zip:${trueZipVersion}",
  truezip_kernel: "de.schlichtherle.truezip:truezip-kernel:${trueZipVersion}",
  velocity: "org.apache.velocity:velocity:1.7",
  vijava: "com.cloudbees.thirdparty:vijava:5.1-beta",
  xstream: "com.thoughtworks.xstream:xstream:1.4.7"
]

deps.each { k, v ->
    DependencyHandler.metaClass."$k" = v
}

// exclude things that are not needed on java 1.6, or are superseded 
// by new libraries
project.afterEvaluate { evaluatedProject ->
  evaluatedProject.configurations.all*.dependencies*.withType(ModuleDependency)*.each { configuration ->
    [ 'com.google.collections': 'google-collections',
      'commons-logging': 'commons-logging',
      'javax.xml.stream': 'stax-api',
      'javassist': 'javassist',
      'org.mortbay.jetty': 'servlet-api-2.5',
      'org.slf4j': 'slf4j-simple',
      'org.slf4j': 'slf4j-log4j12',
      'org.bouncycastle': 'bcprov-jdk15',
      'org.bouncycastle': 'bcprov-jdk16',
      'stax': 'stax-api',
    ].each { g, m ->
      configuration.exclude group: g, module: m
    }
  }
}

// manage old group names to new group names
configurations.all {
  resolutionStrategy {
    eachDependency { DependencyResolveDetails details ->
      if (details.requested.group == 'jdom') {
        details.useTarget deps.jdom
      }
    }
  }
}
